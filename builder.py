#coding=utf-8

'''
# 建造者模式
用已有（或外部提供）的方法，以不同的组合构建一个对象。（也可以和策略模式混合起来）

## 优点：
1. 避免多重条件判断（而由调用方确定）
2. 扩展性好

## 缺点：
1. 类数量多，超过4个最好辅以其他模式
2. 所有策略需要对外暴露，上层要了解所使用的策略

## 适用场景：
1. 多个类只有算法行为上稍有不同
2. 算法需要自由切换

比如：计算器

## 个人理解：
1. python动态语言，不用像静态语言那样必须实现某个接口，只要有那个方法即可 
'''